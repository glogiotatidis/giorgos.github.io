<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>It's around here, somewhere.</title><link href="https://glogiotatidis.github.io/" rel="alternate"></link><link href="https://glogiotatidis.github.io/feeds/all.atom.xml" rel="self"></link><id>https://glogiotatidis.github.io/</id><updated>2015-05-05T00:00:00+02:00</updated><entry><title>Don't hesitate to get a VPS to do your work.</title><link href="https://glogiotatidis.github.io/dont-hesitate-to-get-a-vps-to-do-your-work.html" rel="alternate"></link><updated>2015-05-05T00:00:00+02:00</updated><author><name>Giorgos</name></author><id>tag:glogiotatidis.github.io,2015-05-05:dont-hesitate-to-get-a-vps-to-do-your-work.html</id><summary type="html">&lt;p&gt;This is not going to be one of these posts about how I got a super slim, slick machine or tablet and I moved all my work in the cloud. Fortunately this is old news and nobody talks about it. That being said I have been working on VPS machines for the last 6 months for some tasks.&lt;/p&gt;
&lt;p&gt;When your bandwidth is not enough for what you've to do renting a VPS is a great option. I've seen speeds up to 200MB/s on the cheap &lt;a href="http://digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; or &lt;a href="http://vultr.com/"&gt;Vultr&lt;/a&gt; VPS, with the later being faster most of the time. Want to try &lt;a href="http://docker.io/"&gt;Docker&lt;/a&gt;? Check out a couple images? You want to upload the Docker image you just built to the docker hub? It's just a matter of seconds instead of minutes or even hours some times. Spawing a VPS with 20GB and fast network for a full work day will cost you about 16 dollar cents. Once you're done you can just shut it off. If you need to do this often and you want to have some packages installed and the environment configured to your taste you can create a snapshot of your machine and fire it back up when needed. It's a nice opportunity to learn &lt;a href="http://ansible.com/"&gt;Ansible&lt;/a&gt; scripting too.&lt;/p&gt;
&lt;p&gt;Right now I'm working on my first Firefox for Android (aka Fennec) patch. It's two lines of super simple Javascript. Yet I still have to download all Fennec sources, create a proper build environment and build Fennec. I'm not a full time Fennec Developer and I don't want to have this stack on my machine. It takes space to store, time to download the needed packages and CPU cycles of my under-powered mobile CPU. Vultr has a 'Storage Series' line that won't break the bank. For $0.015 per hour I got a 250GB storage, 1GB Ram machine. I'm going to use it for a couple of days to build and test my patch and then just snapshot it for later use. Snapshot storing on Vultr is free at the moment.&lt;/p&gt;
&lt;p&gt;All in all getting a throwaway VPS to do some tasks that take loads of time on your machine and with your internet connection makes sense. You will need one to five minutes to get it running from the moment you hit deploy and you can instantly destroy it anytime. It's cheap, fast and easy.&lt;/p&gt;</summary></entry><entry><title>Duplicity scp backend weirdness</title><link href="https://glogiotatidis.github.io/duplicity-scp-backend-weirdness.html" rel="alternate"></link><updated>2015-04-28T00:00:00+02:00</updated><author><name>Giorgos</name></author><id>tag:glogiotatidis.github.io,2015-04-28:duplicity-scp-backend-weirdness.html</id><summary type="html">&lt;p&gt;I'm a big fan of &lt;a href="http://duplicity.nongnu.org/"&gt;Duplicity&lt;/a&gt; and I use to backup my laptop to my office based server over &lt;code&gt;scp&lt;/code&gt; which in its turn encrypts everything with &lt;a href="https://en.wikipedia.org/wiki/EncFS"&gt;EncFS&lt;/a&gt; and syncs everything up to my &lt;a href="http://spideroak.com/"&gt;SpiderOak&lt;/a&gt; account. I was going under a typical maintenance today and I run &lt;code&gt;duplicity collection-status&lt;/code&gt; to see how many backup sets I have.&lt;/p&gt;
&lt;p&gt;Surprisingly duplicity returned only one full backup set more than a year old and no other backup sets. After some digging I found that the returned backup set was indeed the only full set I had but besides that I had many incremental sets. Re-running the collection-status command returns some of the incremental backup sets and running it for a third time I get different -smaller- number of sets. My initial thought was that duplicity broke due to the large number of incremental sets or maybe EncFS cannot handle that many files in the same directory.&lt;/p&gt;
&lt;p&gt;Fortunately duplicity has a very verbose log setting &lt;code&gt;-v 9&lt;/code&gt; which returned interesting SSH logs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh: [chan 1] Sesch channel 1 request ok
ssh: [chan 1] EOF received (1)
ssh: [chan 1] EOF sent (1)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I tried the &lt;code&gt;--timeout&lt;/code&gt; flag to increase timeout with no luck. Finally running duplicity with the &lt;code&gt;sftp&lt;/code&gt; backend made the problem go away. All my backup sets were available and nothing strange in the SSH logs. I do not have any hard facts on why I chose to go with &lt;code&gt;scp&lt;/code&gt; backend in the first place but it appears to be less stable compared to &lt;code&gt;sftp&lt;/code&gt;, albeit this is the first time I run into problems with it.&lt;/p&gt;</summary><category term="ops"></category></entry></feed>